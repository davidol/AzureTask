# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-18.04'
  

variables:
  NAMESPACE: hello-dns 
  REPLICAS: 1

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: Docker@2
  inputs:
    containerRegistry: 'AzrDocker'
    repository: 'app-$(Build.SourceBranchName)'
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'
    addPipelineData: false

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'sed -i ''s/#{NAMESPACE}#/$(NAMESPACE)/g'' ./k8s-configs/create-ns.yaml'
- task: CmdLine@2
  inputs:
    script: |
      sed -i 's/#{Build.SourceBranchName}#/$(Build.SourceBranchName)/g' ./k8s-configs/create-deploy.yaml
      
      sed -i 's/#{Build.BuildId}#/$(Build.BuildId)/g' ./k8s-configs/create-deploy.yaml
      sed -i 's/#{NAMESPACE}#/$(NAMESPACE)/g' ./k8s-configs/create-deploy.yaml
      sed -i 's/#{REPLICAS}#/$(REPLICAS)/g' ./k8s-configs/create-deploy.yaml
      sed -i 's/#{NAMESPACE}#/$(NAMESPACE)/g' ./k8s-configs/create-service.yaml
      cat ./k8s-configs/create-deploy.yaml
      cat ./k8s-configs/create-service.yaml
    
- task: Kubernetes@1
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: ''
    azureResourceGroup: 'demoProj-dev-001'
    kubernetesCluster: 'dev-k8s-voting-001'
    useClusterAdmin: true
    command: 'apply'
    useConfigurationFile: true
    configuration: '$(System.DefaultWorkingDirectory)/k8s-configs/'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

